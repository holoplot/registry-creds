apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
      - image: "{{ .Values.image.repository}}:{{ .Values.image.tag }}"
        name: {{ .Release.Name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{ if .Values.ecr }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-ecr
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-ecr
                key: AWS_SECRET_ACCESS_KEY
          - name: AWS_SESSION_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-ecr
                key: AWS_SESSION_TOKEN
          - name: awsaccount
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-ecr
                key: aws-account
          - name: awsregion
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-ecr
                key: aws-region
          - name: aws_assume_role
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-ecr
                key: aws-assume-role
        {{ end }}
        {{ if .Values.dpr }}
          - name: DOCKER_PRIVATE_REGISTRY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-dpr
                key: DOCKER_PRIVATE_REGISTRY_PASSWORD
          - name: DOCKER_PRIVATE_REGISTRY_SERVER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-dpr
                key: DOCKER_PRIVATE_REGISTRY_SERVER
          - name: DOCKER_PRIVATE_REGISTRY_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-dpr
                key: DOCKER_PRIVATE_REGISTRY_USER
        {{ end }}
        {{ if .Values.acr }}
          - name: ACR_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-acr
                key: ACR_URL
          - name: ACR_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-acr
                key: ACR_CLIENT_ID
          - name: ACR_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-acr
                key: ACR_PASSWORD
        {{ end }}
      {{ if .Values.gcr }}
        volumeMounts:
        - name: gcr-creds
          mountPath: "/root/.config/gcloud"
          readOnly: true
      volumes:
      - name: gcr-creds
        secret:
          secretName: {{ .Release.Name }}-gcr
      {{ end }}
      resources:
        requests:
          memory: "32Mi"
          cpu: "100m"
        limits:
          memory: "64Mi"
          cpu: "200m"